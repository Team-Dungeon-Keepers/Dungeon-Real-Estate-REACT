{"version":3,"sources":["utils/axiosWithAuth.js","utils/authUtils.js","components/NavBar.js","components/Dashboard.js","schema/loginSchema.js","components/LoginForm.js","actions/Actions.js","components/register.js","components/PrivateRoute.js","components/ProfileEdit.js","components/Userline.js","components/ViewAllUsers.js","App.js","reducers/Reducer.js","index.js","utils/enumToString.js"],"names":["axiosWithAuth","token","localStorage","getItem","axios","create","headers","authorization","JSON","parse","baseURL","loginAsManager","NavBar","id","to","type","onClick","window","removeItem","Dashboard","props","useState","setReimb","trigger","userID","setTrigger","useHistory","useParams","useEffect","get","then","res","data","className","schema","yup","shape","username","required","min","password","confirmPassword","loginSchema","updateSchema","USER_FIRST_NAME","USER_LAST_NAME","USER_EMAIL","LoginForm","disabled","setDisabled","form","setForm","shaped","setShaped","history","handleChange","event","target","name","value","checked","updateData","validate","catch","err","errors","isValid","valid","checkSchema","onChange","newLogin","neoUser","post","user","setItem","push","console","log","alert","response","message","postNewLogin","children","FETCH_START","FETCH_SUCCESS","FETCH_FAIL","EDIT_CLASS","DELETE_CLASS","ADD_CLASS","ADD_USER","connect","createUser","payload","htmlFor","postNewUser","PrivateRoute","Component","component","rest","render","updateUser","a","ERS_USER_ID","ERS_USERNAME","ERS_PASSWORD","method","url","Userline","el","RoleToString","USER_ROLE_ID","ViewAllUsers","users","setUsers","class","map","App","path","RegisterForm","exact","initialState","role","skip","classes","isFetching","error","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","action","editClass","item","find","c","deleteClass","filter","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","module","exports","parseInt","StatusToString","TypeToString"],"mappings":"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","file":"static/js/main.4b231ef8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const axiosWithAuth = () => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    return axios.create({\r\n        headers: {\r\n            authorization: JSON.parse(token)\r\n        },\r\n        baseURL: 'https://dungeon-site-api.herokuapp.com/api'\r\n    });\r\n}\r\n\r\nexport default axiosWithAuth;","\r\nconst loginAsManager = function() {\r\n    let status = localStorage.getItem('userRole');\r\n    \r\n    return (status === \"1\");\r\n}\r\n\r\nexport {\r\n    loginAsManager\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../styles/login.css'\r\n\r\nconst NavBar = function ()  {\r\n    const logout = () => {\r\n        window.localStorage.removeItem('token');\r\n        window.localStorage.removeItem('userID');\r\n        window.localStorage.removeItem('userRole');\r\n      };\r\n    \r\n        return (\r\n        <div id=\"nav-bar\">\r\n            <Link to=\"/\">\r\n                <button type=\"Button\" onClick={logout} >\r\n                    Logout\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/profile\">\r\n                <button type=\"Button\" >\r\n                    Profile\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/dashboard\">\r\n                <button type=\"button\">\r\n                    Dashboard\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/addreimb\">\r\n                <button type=\"button\">\r\n                    New Reimbursement\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/pendingreimb\">\r\n                <button type=\"button\">\r\n                    Approve/Deny\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/userview\">\r\n                <button type=\"button\">\r\n                    View Users\r\n                </button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    NavBar\r\n}","import '../styles/login.css'\r\nimport React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport axiosWithAuth from '../utils/axiosWithAuth';\r\nimport { loginAsManager } from '../utils/authUtils';\r\nimport { NavBar } from './NavBar';\r\n\r\nfunction Dashboard(props) { \r\n    const [reimb, setReimb] = useState(null);\r\n    const {trigger, setTrigger} = props;\r\n    const history = useHistory();\r\n\r\n    let { userID } = useParams();\r\n\r\n    useEffect(()=> {\r\n        if ((userID == null) || (!loginAsManager())) \r\n            userID = localStorage.getItem('userID');\r\n       \r\n        axiosWithAuth()\r\n            .get(`https://dungeon-site-api.herokuapp.com/api/reimb/user/${userID}`)\r\n            .then(res => \r\n                setReimb(res.data)\r\n            )\r\n        \r\n    }, [trigger])\r\n\r\n    return(\r\n    <div>   \r\n        <NavBar />\r\n            <h2>My Reimbursements</h2> \r\n        <div className=\"tablecontainer\">\r\n        <table>\r\n            <tr>\r\n                <th>Reimb ID</th>\r\n                <th>Description</th>\r\n                <th>Amount</th>\r\n                <th>Type</th>\r\n                <th>Status</th>\r\n                <th>Author</th>\r\n                <th>Resolved By</th>\r\n                <th>Submitted</th>\r\n                <th>Resolved</th>\r\n            </tr>\r\n            {/* {reimb && reimb.map(el => {\r\n                return  <Reimbline key={el.REIMB_ID} el={el} \r\n                    trigger={trigger} setTrigger={setTrigger} />\r\n            })} */}\r\n            \r\n\r\n        </table> \r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n","import * as yup from 'yup'\r\n\r\nconst schema = yup.object().shape({\r\n    username: yup.string()\r\n        .required('username is required')\r\n        .min(3, 'username must be at least three characters'),\r\n    password: yup.string()\r\n        .required('password is required'),\r\n    confirmPassword: yup.string()\r\n        .required('password confirmation is required')\r\n})\r\n\r\nconst loginSchema = yup.object().shape({\r\n    username: yup.string()\r\n        .required('username is required')\r\n        .min(3, 'username must be at least three characters'),\r\n    password: yup.string()\r\n        .required('password is required')\r\n})\r\n\r\nconst updateSchema = yup.object().shape({\r\n    username: yup.string()\r\n        .required('username is required')\r\n        .min(3, 'username must be at least three characters'),\r\n    password: yup.string()\r\n        .required('password is required'),\r\n    confirmPassword: yup.string()\r\n        .required('password confirmation is required'),\r\n    USER_FIRST_NAME: yup.string(),\r\n    USER_LAST_NAME: yup.string(),\r\n    USER_EMAIL: yup.string()\r\n})\r\n\r\n\r\nexport {\r\n    loginSchema,\r\n    schema,\r\n    updateSchema\r\n}","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport '../styles/login.css'\r\nimport * as yup from 'yup'\r\nimport { loginSchema as schema } from '../schema/loginSchema'\r\nimport axios from 'axios';\r\n\r\nfunction LoginForm(props) {\r\n\r\n    const initialValues = {\r\n        username: \"\",\r\n        password: \"\",\r\n    }\r\n\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [form, setForm] = useState(initialValues);\r\n    const [shaped, setShaped] = useState({});\r\n    let history = useHistory();\r\n\r\n    const checkSchema = (name, value) => {\r\n        yup.reach(schema, name).validate(value)\r\n            .then(() => {\r\n                setShaped({...shaped, [name]: ''});\r\n            }).catch((err) => {\r\n                if (err.errors) { \r\n                    setShaped({...shaped, [name]: err.errors[0]});\r\n                }\r\n        });\r\n \r\n        schema.isValid(form)\r\n            .then((valid) => {\r\n                setDisabled(!valid);\r\n            });\r\n    }\r\n\r\n    const postNewLogin = (newLogin) => {\r\n        var neoUser = {\r\n            username: newLogin.username,\r\n            password: newLogin.password\r\n        };\r\n        axios\r\n          .post('https://dungeon-site-api.herokuapp.com/api/auth/login', neoUser)\r\n          .then((res) => {\r\n            const token = res.data.token;\r\n            const user = res.data.user;\r\n            localStorage.setItem('token', `\"${token}\"`);\r\n            localStorage.setItem('userID', `${user.userID}`);\r\n            \r\n            history.push(\"/dashboard\");\r\n          })\r\n          .catch((err) => {\r\n            console.log({err});\r\n            alert(err.response.data.message);\r\n          });\r\n      };\r\n\r\n    const goRegister = () => {\r\n        history.push(\"/register\");\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const { name, type, value, checked } = event.target;\r\n        const updateData = (type === 'checkbox')?checked:value;\r\n        setForm({...form, [name]: updateData});\r\n        checkSchema(name, updateData);\r\n    }\r\n \r\n    const handleSubmit = () => {\r\n        postNewLogin(form)\r\n    }\r\n\r\n    return (\r\n        <div id=\"loginFormContainer\">\r\n            <div id=\"form-login\" className=\"form form-login\">\r\n\t\t\t\t<div id=\"loginRow1\">\r\n\t\t\t\t<span id=\"dungeonSite\">Dungeon Site</span><br/><br/>\r\n\t\t\t\t<span id=\"loginSpan\">Login</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"loginRow2\">\r\n                \t<div id=\"error-login\" className=\"error error-login\" >\r\n                    \t{shaped.username}</div>\r\n                \t<div id=\"error-username\" className=\"error error-username\" ></div>\r\n\t\t\t\t\t\t<span>UserName</span><br/>\r\n                    \t<input id=\"username\" name=\"username\" type=\"text\" \r\n                        \tonChange={handleChange} value={form.username} />\r\n                \t<div id=\"error-password\" className=\"error error-password\" >\r\n                    \t{shaped.password}\r\n                </div>\r\n\t\t\t\t\t\t<span>Password</span><br/>\r\n                    \t<input id=\"password\" name=\"password\" type=\"password\"\r\n                    \tonChange={handleChange} value={form.password} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"loginRow3\">\r\n                \t<button id=\"button-login\" className=\"btn btn-login\" \r\n                    \tdisabled={disabled} onClick={handleSubmit}>GO!</button><br/><br/>\r\n\t\t\t\t\t<span>New To Dungeon Site?</span><br/>\r\n                \t<span onClick={goRegister}>Register Here</span>\r\n                \t{props.children}\r\n\t\t\t\t</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;\r\n","// filler file to help Github confirm file structure\r\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\r\nimport axios from 'axios';\r\n\r\nexport const FETCH_START = \"FETCH_START\";\r\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\r\nexport const FETCH_FAIL = \"FETCH_FAIL\";\r\nexport const EDIT_CLASS = 'EDIT_CLASS';\r\nexport const DELETE_CLASS = \"DELETE_CLASS\";\r\nexport const ADD_CLASS = \"ADD_CLASS\";\r\nexport const ADD_USER = \"ADD_USER\";\r\n\r\nexport const fetchClasses = () => {\r\n  return (dispatch => {\r\n    dispatch({type: FETCH_START});\r\n    \r\n    dispatch(fetchStart());\r\n    axiosWithAuth().get('/classes')\r\n    .then(res=> {\r\n      //console.log('classes', res.data);\r\n      dispatch({type: FETCH_SUCCESS, payload:res.data});\r\n    })\r\n    .catch(err=>{\r\n      dispatch({type: FETCH_FAIL, payload:err});\r\n    })\r\n  });\r\n}\r\n\r\n\r\nexport const postNewClass = (item) => {\r\n    return (dispatch => {\r\n      dispatch({type:FETCH_START});\r\n  \r\n      dispatch(fetchStart());\r\n      axios\r\n      .post('https://anywhere-fitness-2021.herokuapp.com/api/classes', item)\r\n      .then((res) => {\r\n        dispatch({type: FETCH_SUCCESS, payload:res.data})\r\n        //console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        dispatch({type: FETCH_FAIL, payload:err});\r\n        console.log('ERROR', err);\r\n      });\r\n    })\r\n  }\r\n\r\n  export const fetchStart = ()=> {\r\n    return({type: FETCH_START});\r\n  }\r\n\r\n  export const editClass = (editedClass) => {\r\n    return { type: EDIT_CLASS, payload: editedClass };\r\n  };\r\n  \r\n  export const addClass = c => {\r\n    return ({type: ADD_CLASS, payload:c})\r\n  }\r\n  \r\n  export const deleteClass = (id) => {\r\n    return({type:DELETE_CLASS, payload: id})\r\n  }\r\n\r\n  export const createUser = user => {\r\n    return {type: ADD_USER, payload: user}\r\n  }","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport '../styles/login.css'\r\nimport * as yup from 'yup'\r\nimport { schema } from '../schema/loginSchema'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux';\r\nimport { createUser } from '../actions/Actions';\r\nimport { NavBar } from './NavBar'\r\n\r\nfunction RegisterForm(props) {\r\n    const initialValues = {\r\n        username: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n    }\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [form, setForm] = useState(initialValues);\r\n    const [shaped, setShaped] = useState({});\r\n    let history = useHistory();\r\n\r\n    const postNewUser = (user) => {\r\n        var neoUser = {\r\n            username: user.username,\r\n            password: user.password\r\n        }\r\n        axios\r\n          .post('https://dungeon-site-api.herokuapp.com/api/auth/register', neoUser)\r\n          .then((res) => {\r\n            history.push('/login');\r\n          })\r\n          .catch((err) => {\r\n            console.log({err});\r\n          });\r\n    };\r\n\r\n    const checkSchema = (name, value) => {\r\n        yup.reach(schema, name).validate(value)\r\n            .then(() => {\r\n                setShaped({...shaped, [name]: ''});\r\n            }).catch((err) => {\r\n                if (err.errors) { \r\n                    setShaped({...shaped, [name]: err.errors[0]});\r\n                }\r\n        });\r\n\r\n        schema.isValid(form)\r\n            .then((valid) => setDisabled(!valid));\r\n    }\r\n\r\n    const gotoLogin = () => {\r\n        history.push(\"/login\");\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const { name, type, value, checked } = event.target;\r\n        const updateData = (type === 'checkbox')?checked:value;\r\n        setForm({...form, [name]: updateData});\r\n        checkSchema(name, updateData);\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        postNewUser(form)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <div id=\"form-register\" className=\"form form-register\">\r\n                <h1>Register Form</h1>\r\n                <div id=\"error-register\" className=\"error error-register\" ></div>\r\n                <div id=\"error-username\" className=\"error error-username\" >{shaped.username}</div>\r\n                <label id=\"label-username\" htmlFor=\"username\">Username\r\n                    <input id=\"username\" name=\"username\" type=\"text\" \r\n                        onChange={handleChange} value={form.username}/>\r\n                </label>\r\n                <div id=\"error-password\" className=\"error error-password\" >\r\n                    {shaped.password}</div>\r\n                <label id=\"label-password\" htmlFor=\"password\">Password\r\n                    <input id=\"password\" name=\"password\" type=\"password\"\r\n                        onChange={handleChange} value={form.password} />\r\n                </label>\r\n                <div id=\"error-confirm-password\" className=\"error error-confirm-password\" >{shaped.confirmPassword}</div>\r\n                <label id=\"label-confirm-password\" htmlFor=\"confirmPassword\">Confirm Password\r\n                    <input id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" onChange={handleChange} \r\n                    value={form.confirmPassword} />\r\n                </label>\r\n                <button id=\"button-register\" className=\"btn btn-register\"\r\n                    onClick={handleSubmit}>Register</button>\r\n                <button id=\"button-nav-login\" className=\"btn nav-btn nav-login\"\r\n                    onClick={gotoLogin} >Login</button>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { createUser })(RegisterForm);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    return <Route {...rest} render={(props)=>{\r\n        if (localStorage.getItem(\"token\")) {\r\n            return <Component {...props}/>\r\n        } else {\r\n            return <Redirect to=\"/login\"/>;\r\n        }\r\n    }}/>;\r\n}\r\n\r\nexport default PrivateRoute;","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport '../styles/login.css'\r\nimport * as yup from 'yup'\r\nimport axios from 'axios';\r\nimport { updateSchema } from '../schema/loginSchema'\r\nimport { connect } from 'react-redux'\r\n\r\nimport axiosWithAuth from '../utils/axiosWithAuth';\r\nimport { loginAsManager } from '../utils/authUtils'\r\nimport { NavBar } from './NavBar'\r\n\r\nfunction ProfileEdit(props) {\r\n    const initialValues = {\r\n        username: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n    }\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [form, setForm] = useState(initialValues);\r\n    const [shaped, setShaped] = useState({});\r\n    let history = useHistory();\r\n    const { trigger, setTrigger } = props;\r\n    let { userID } = useParams();\r\n\r\n    const updateUser = async (user) => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        if (userID == null)\r\n            userID = localStorage.getItem('userID');\r\n\r\n        var neoUser = {\r\n            ERS_USER_ID: userID,\r\n            ERS_USERNAME: user.username,\r\n            ERS_PASSWORD: user.password,\r\n            USER_FIRST_NAME: user.USER_FIRST_NAME,\r\n            USER_LAST_NAME: user.USER_LAST_NAME,\r\n            USER_EMAIL: user.USER_EMAIL\r\n        }\r\n        await axios({\r\n            method: 'PUT',\r\n            url: `https://dungeon-site-api.herokuapp.com//api/users/${neoUser.ERS_USER_ID}`,\r\n            data: neoUser,\r\n            headers: {\r\n                'authorization': JSON.parse(token)\r\n            }\r\n        }).then((res) => {\r\n            history.push('/dashboard');\r\n          })\r\n          .catch((err) => {\r\n            console.log({err});\r\n          });\r\n    };\r\n\r\n    const checkSchema = (name, value) => {\r\n        yup.reach(updateSchema, name).validate(value)\r\n            .then(() => {\r\n                setShaped({...shaped, [name]: ''});\r\n            }).catch((err) => {\r\n                if (err.errors) { \r\n                    setShaped({...shaped, [name]: err.errors[0]});\r\n                }\r\n        });\r\n\r\n        updateSchema.isValid(form)\r\n            .then((valid) => setDisabled(!valid));\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const { name, type, value, checked } = event.target;\r\n        const updateData = (type === 'checkbox')?checked:value;\r\n        setForm({...form, [name]: updateData});\r\n        checkSchema(name, updateData);\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        updateUser(form)\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if ((userID == null) || (!loginAsManager())) \r\n            userID = localStorage.getItem('userID');\r\n       \r\n        axiosWithAuth().get(`/users/${userID}`)\r\n        .then(res => {\r\n            res.ERS_PASSWORD = \"\";\r\n            setForm(res.data)\r\n        })\r\n        \r\n    }, [trigger])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <div id=\"form-profile\" className=\"form form-profile\">\r\n                <h1>Edit Profile</h1>\r\n                <div id=\"error-register\" className=\"error error-register\" ></div>\r\n                <div id=\"error-username\" className=\"error error-username\" >{shaped.username}</div>\r\n                <label id=\"label-username\" htmlFor=\"username\">Username\r\n                    <input id=\"username\" name=\"username\" type=\"text\" \r\n                        onChange={handleChange} value={form.ERS_USERNAME}/>\r\n                </label>\r\n                <div id=\"error-password\" className=\"error error-password\" >\r\n                    {shaped.password}</div>\r\n                <label id=\"label-password\" htmlFor=\"password\">Password\r\n                    <input id=\"password\" name=\"password\" type=\"password\"\r\n                        onChange={handleChange} />\r\n                </label>\r\n                <div id=\"error-confirm-password\" className=\"error error-confirm-password\" >{shaped.confirmPassword}</div>\r\n                <label id=\"label-confirm-password\" htmlFor=\"confirmPassword\">Confirm Password\r\n                    <input id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" onChange={handleChange} \r\n                    value={form.confirmPassword} />\r\n                </label>\r\n                <label id=\"label-first-name\" htmlFor=\"firstName\">First Name\r\n                    <input id=\"confirmPassword\" name=\"USER_FIRST_NAME\" type=\"text\" onChange={handleChange} \r\n                    value={form.USER_FIRST_NAME} />\r\n                </label>\r\n                <label id=\"label-last-name\" htmlFor=\"lastName\">Last Name\r\n                    <input id=\"confirmPassword\" name=\"USER_LAST_NAME\" type=\"text\" onChange={handleChange} \r\n                    value={form.USER_LAST_NAME} />\r\n                </label>\r\n                <label id=\"label-email\" htmlFor=\"email\">Email\r\n                    <input id=\"confirmPassword\" name=\"USER_EMAIL\" type=\"text\" onChange={handleChange} \r\n                    value={form.USER_EMAIL} />\r\n                </label>\r\n                <button id=\"button-register\" className=\"btn btn-register\"\r\n                    onClick={handleSubmit}>Update</button>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, null)(ProfileEdit);\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { loginAsManager } from '../utils/authUtils';\r\n\r\nimport { RoleToString } from '../utils/enumToString';\r\n\r\nfunction Userline(props) {\r\n    let {el} = props;\r\n    const {trigger, setTrigger} = props; \r\n    let history = useHistory();\r\n\r\n    const editUser = function () {\r\n        history.push(`/userview/${el.ERS_USER_ID}`);\r\n    }\r\n\r\n    const viewTickets = function() {\r\n        history.push(`/dashboard/${el.ERS_USER_ID}`);\r\n    }\r\n    \r\n    return (<tr>\r\n        <td>{el.ERS_USER_ID}</td>\r\n        <td>{el.ERS_USERNAME}</td>\r\n        <td>{el.USER_FIRST_NAME}</td>\r\n        <td>{el.USER_LAST_NAME}</td>\r\n        <td>{el.USER_EMAIL}</td>\r\n        <td>{RoleToString(el.USER_ROLE_ID)}</td>\r\n                \r\n         {( loginAsManager() && \r\n            <>\r\n                <button onClick={editUser}>Edit</button>\r\n                <button onClick={viewTickets}>View Tickets</button>\r\n            </>\r\n         )}\r\n    </tr>)\r\n}\r\n\r\nexport {\r\n    Userline\r\n}\r\n","import '../styles/login.css'\r\nimport React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport axiosWithAuth from '../utils/axiosWithAuth';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginAsManager } from '../utils/authUtils';\r\nimport { NavBar } from './NavBar';\r\nimport { Userline} from './Userline';\r\n\r\nfunction ViewAllUsers(props) { \r\n    const [users, setUsers] = useState(null)\r\n    const {trigger,setTrigger} = props\r\n    const history = useHistory()\r\n\r\n    useEffect(()=> {\r\n        if (loginAsManager()) {\r\n            axiosWithAuth()\r\n            .get('https://dungeon-site-api.herokuapp.com/api/users')\r\n                .then(res => \r\n                    setUsers(res.data)\r\n                )\r\n        } else {\r\n            history.push('/dashboard');\r\n        }\r\n    },[trigger])\r\n\r\n    return(\r\n    <div>   \r\n        <NavBar />\r\n        <h2 className=\"h-42\" >All Users</h2> \r\n        \r\n        <div className=\"tablecontainer\">\r\n        <table>\r\n            <tr>\r\n                <th class=\"th-long\">User ID</th>\r\n                <th>Username</th>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>Email</th>\r\n                <th>Role</th>\r\n            </tr>\r\n            {users && users.map(el => {\r\n                return  <Userline key={el.ERS_USER_ID} el={el} \r\n                    trigger={trigger} setTrigger={setTrigger} />\r\n            })}\r\n            \r\n\r\n        </table> \r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ViewAllUsers;\r\n","import './App.css';\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\nimport Dashboard from './components/Dashboard';\r\nimport LoginForm from './components/LoginForm';\r\nimport RegisterForm from './components/register';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport ProfileEdit from './components/ProfileEdit';\r\nimport ViewAllUsers from './components/ViewAllUsers';\r\nimport { NavBar } from './components/NavBar';\r\n\r\nfunction App() {\r\n  let [trigger, setTrigger] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n          <Switch>\r\n          <PrivateRoute path='/dashboard/:userID'>\r\n             <Dashboard trigger={trigger} setTrigger={setTrigger} /> \r\n          </PrivateRoute>\r\n          <PrivateRoute path='/dashboard'>\r\n             <Dashboard trigger={trigger} setTrigger={setTrigger} /> \r\n          </PrivateRoute>\r\n            <Route path=\"/login\">\r\n              <LoginForm />\r\n            </Route>\r\n            <Route path=\"/register\" component={RegisterForm}/>\r\n            <PrivateRoute path=\"/userview/:userID\" >\r\n              <ProfileEdit trigger={trigger} setTrigger={setTrigger} />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/profile/:userID\">\r\n              <ProfileEdit trigger={trigger} setTrigger={setTrigger} />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/profile\">\r\n            <ProfileEdit trigger={trigger} setTrigger={setTrigger} />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/userview\" >\r\n              <ViewAllUsers trigger={trigger} setTrigger={setTrigger} />\r\n            </PrivateRoute>\r\n            <Route exact path=\"/\" component={LoginForm} />\r\n          </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// filler file to help Github confirm file structures\r\n\r\nimport { \r\n  EDIT_CLASS, \r\n  FETCH_START, \r\n  FETCH_SUCCESS, \r\n  FETCH_FAIL, \r\n  DELETE_CLASS,\r\n  ADD_CLASS,\r\n  ADD_USER } from '../actions/Actions';\r\n  \r\n  const initialState = {\r\n    user: {\r\n      username:'',\r\n      password:'',\r\n      role:'',\r\n      skip: false\r\n    },\r\n    classes: [],\r\n    isFetching: false,\r\n    error: ''\r\n  };\r\n  \r\n  export const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case(FETCH_START):\r\n        return({\r\n          ...state,\r\n          isFetching: true\r\n        })\r\n      case(FETCH_SUCCESS):\r\n        return({\r\n          ...state,\r\n          classes: action.payload,\r\n          isFetching: false\r\n        })\r\n      case(FETCH_FAIL):\r\n        return({\r\n          ...state,\r\n          error: action.payload,\r\n          isFetching: false\r\n        })\r\n      case(EDIT_CLASS):\r\n        const editClass = state.item.find((c) => c.id === action.payload);\r\n        return({\r\n          ...state,\r\n          classes: editClass,\r\n        })\r\n      case(DELETE_CLASS):\r\n        const deleteClass = state.classes.filter(c=>(action.payload !== c.id))\r\n        return({\r\n          ...state,\r\n          classes: deleteClass\r\n        })\r\n      case(ADD_CLASS):\r\n        return({\r\n          ...state,\r\n          classes: [...state.classes, action.payload]\r\n        })\r\n      case(ADD_USER):\r\n        return({\r\n          ...state,\r\n          user: action.payload\r\n        })\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reducer } from './reducers/Reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","\r\nconst RoleToString = function(value) {\r\n    value = parseInt(value);\r\n\r\n    switch (value) {\r\n        case 1: return \"Manager\";\r\n            break;\r\n        default: return \"Employee\";\r\n    }\r\n}\r\n\r\nconst StatusToString = function(value) {\r\n    value = parseInt(value);\r\n\r\n    switch (value) {\r\n        case 1: return \"Approved\";\r\n            break;\r\n        case 2: return \"Denied\";\r\n            break;\r\n        default: return \"Pending\";\r\n    }\r\n}\r\n\r\nconst TypeToString = function(value) {\r\n    value = parseInt(value);\r\n\r\n    switch (value) {\r\n        case 1: return \"Lodging\";\r\n            break;\r\n        case 2: return \"Travel\";\r\n            break;\r\n        case 3: return \"Food\";\r\n            break;\r\n        default: return \"Other\";\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    RoleToString,\r\n    StatusToString,\r\n    TypeToString\r\n}"],"sourceRoot":""}